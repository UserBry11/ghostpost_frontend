{"version":3,"sources":["Home.js","Post.js","App.js","serviceWorker.js","index.js"],"names":["API_HOST","Home","state","datas","popularData","switchA","switchB","switchR","switchP","id_value","allItemsButton","OnOff","setState","boastOnlyButton","result","roastsOnlyButton","getPopularItems","fetch","then","response","json","responseData","console","log","catch","error","handleUpvote","id","String","handleDownvote","this","Fragment","rel","href","integrity","crossorigin","className","to","onClick","map","value","title","key","boolean","content","upvotes","downvotes","post_date","filter","condition","popularItemsButton","Component","Popular","props","Post","handleChange","event","target","name","handleBooleanChange","postPostButton","preventDefault","meth_head","method","headers","body","JSON","stringify","history","push","type","onSubmit","htmlFor","placeholder","maxLength","onChange","required","cols","rows","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d39376b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './App.css';\n\nconst API_HOST = 'http://localhost:8000/api/';\n\nclass Home extends Component {\n  state = {\n    datas: [],\n    popularData: [],\n    switchA: false,\n    switchB: true,\n    switchR: false,\n    switchP: !true,\n    id_value: '',\n    // now: new Date()\n  }\n\n  allItemsButton = () => {\n\n    let OnOff = this.state.switchA\n    this.setState({switchA: !OnOff})\n    // let meth_head = {\n    //   method: \"GET\",\n    //   headers: {\n    //     'Content-type': 'application/json'\n    //   }\n    // }\n\n    // fetch( API_HOST + 'boastroast/')\n    // .then(response => response.json())\n    // .then(responseData => {\n    //   console.log(responseData)\n    //   this.setState({\n    //     status: [responseData],\n    //     switch: !OnOff\n    //   })\n    // })\n    // .catch( error => {\n    //   console.log(\"Error: \", error)\n    // })\n  }\n\n  boastOnlyButton = () => {\n    let result = this.state.switchB\n    this.setState({ switchB: !result })\n  }\n\n  roastsOnlyButton = () => {\n    let result = this.state.switchR;\n    this.setState({ switchR: !result })\n  }\n\n  getPopularItems = () => {\n  \n    fetch( API_HOST + 'boastroast/popular/')\n    .then(response => response.json())\n    .then(responseData => {\n      console.log(responseData)\n      this.setState({\n        popularData: responseData,\n      })\n    })\n    .catch(error => console.log(\"Error: \", error))\n    \n  }\n\n  handleUpvote = id => () => {\n    this.getPopularItems()\n\n    fetch(API_HOST + 'boastroast/upvote/?id=' + String(id))\n    .then(response => response.json())\n    .then(responseData => {\n      console.log(responseData)\n      this.setState({ datas: responseData})\n    })\n    .catch(error => console.log(error))\n\n    this.getPopularItems()\n  }\n\n  handleDownvote = id => () => {\n    this.getPopularItems()\n\n    fetch(API_HOST + 'boastroast/downvote/?id=' + String(id))\n    .then(response => response.json())\n    .then(responseData => {\n      console.log(responseData)\n      this.setState({ datas: responseData})\n      }  \n    )\n    .catch( error => console.log(error))\n\n    this.getPopularItems()\n  }\n\n  componentDidMount(){ \n    fetch( API_HOST + 'boastroast/')\n    .then(response => response.json())\n    .then(responseData => {\n      console.log(responseData)\n      this.setState({\n        datas: responseData,\n      })\n    })\n    .catch( error => {\n      console.log(\"Error: \", error)\n    })\n\n    this.getPopularItems()\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossorigin=\"anonymous\"\n        />\n        <div className=\"container\">\n          <header className=\"row p-3 mb-2 bg-light shadow rounded text-center\">\n            <div className=\"col align-self-end\">\n\n              <Link to=\"/post\" className=\"post\">\n                <button className=\"btn btn-info btn-lg shadow\">\n                  Create Post\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"col\">\n              <h1>Hello World, I'm Ghostpost!</h1>\n              <h3>powered by React & Django!</h3>\n              <div><strong>Client-side: </strong>React.js</div>\n              <div><strong>Server-side: </strong>Django-Rest-Framework</div>\n              <div>Requests sent to: {API_HOST}</div>\n            </div>\n\n            <div className=\"col align-self-end\">\n              <h4>Developer: Bryan Fernandez</h4>\n            </div>\n          </header>\n\n          <div className=\"row p-3 mb-2 bg-light shadow rounded shadow rounded\">\n            \n            <section className=\"all col-sm text-center\">\n                {this.state.switchA ?\n                  <div>\n                    <button onClick={this.allItemsButton}>\n                      all Posts!!\n                    </button>\n                    <h3>Click to Expand!</h3>\n                  </div>\n                  :\n                  <div className=\"shadow\">\n                    {/* <button onClick={this.allItemsButton}>\n                      clear All items\n                    </button> */}\n                    <h3>All items</h3>\n                    {\n                      this.state.datas.map(value =>\n                      <p className=\"card\">\n                          <div className=\"card-header bg-dark text-white\"><strong>title: </strong>{value.title}</div>\n                          <ul key={value.id} className=\"list-group shadow\">\n                            <li className=\"list-group-item list-group-item-secondary\">id: {value.id}</li>\n                            <li className=\"list-group-item list-group-item-primary\">{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n                            <li className=\"list-group-item list-group-item-secondary\">Content: {value.content}</li>\n                            <li className=\"list-group-item list-group-item-danger\">\n                              <button onClick={this.handleUpvote(value.id)} className=\"btn btn-primary shadow\">Upvote</button>\n                              <button onClick={this.handleDownvote(value.id)} className=\"btn btn-danger shadow\">Downvote</button>\n                            </li>\n                            <li className=\"list-group-item list-group-item-primary\">Upvotes: {value.upvotes}</li>\n                            <li className=\"list-group-item list-group-item-secondary\">Downvotes: {value.downvotes}</li>\n                            <li className=\"list-group-item list-group-item-info\">Post-Date: {value.post_date}</li>\n                          </ul> \n                    </p>\n                        )\n                    }\n                  </div>\n                }\n            </section>\n\n            <section className=\"boasts col-sm text-center\">\n                {this.state.switchB ?\n                    <div>\n                      <button onClick={this.boastOnlyButton}>\n                        for BOASTS :^D\n                      </button>\n                      <h3>:^D</h3>\n                    </div>\n                    :\n                    <div className=\"shadow\">\n                      <button onClick={this.boastOnlyButton}>\n                        clear BOASTS :^D\n                      </button>\n                      <h3>Boasts</h3>\n                      {\n                        this.state.datas.filter( condition => condition.boolean === true ).map(value =>\n                          <p className=\"card\">\n                          <div className=\"card-header bg-dark text-white\"><strong>title: </strong>{value.title}</div>\n                          <ul key={value.id} className=\"list-group shadow\">\n                            <li className=\"list-group-item list-group-item-secondary\">id: {value.id}</li>\n                            <li className=\"list-group-item list-group-item-primary\">{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n                            <li className=\"list-group-item list-group-item-secondary\">Content: {value.content}</li>\n                            <li className=\"list-group-item list-group-item-danger\">\n                              <button onClick={this.handleUpvote(value.id)} className=\"btn btn-primary shadow\">Upvote</button>\n                              <button onClick={this.handleDownvote(value.id)} className=\"btn btn-danger shadow\">Downvote</button>\n                            </li>\n                            <li className=\"list-group-item list-group-item-primary\">Upvotes: {value.upvotes}</li>\n                            <li className=\"list-group-item list-group-item-secondary\">Downvotes: {value.downvotes}</li>\n                            <li className=\"list-group-item list-group-item-success\">Post-Date: {value.post_date}</li>\n                          </ul> \n                    </p>\n                          )\n                      }\n                    </div>\n                }\n            </section>\n\n            <section className=\"roasts col-sm text-center\">\n                {this.state.switchR ?\n                  <div className=\"shadow\">\n                    <button onClick={this.roastsOnlyButton}>\n                      clear ROASTS :^(\n                    </button>\n                    <h3>Roasts</h3>\n                    {\n                      this.state.datas.filter(condition => condition.boolean === false).map(value =>\n                        <p className=\"card\">\n                        <div className=\"card-header bg-dark text-white\"><strong>title: </strong>{value.title}</div>\n                        <ul key={value.id} className=\"list-group shadow\">\n                          <li className=\"list-group-item list-group-item-secondary\">id: {value.id}</li>\n                          <li className=\"list-group-item list-group-item-primary\">{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n                          <li className=\"list-group-item list-group-item-secondary\">Content: {value.content}</li>\n                          <li className=\"list-group-item list-group-item-danger\">\n                            <button onClick={this.handleUpvote(value.id)} className=\"btn btn-primary shadow\">Upvote</button>\n                            <button onClick={this.handleDownvote(value.id)} className=\"btn btn-danger shadow\">Downvote</button>\n                          </li>\n                          <li className=\"list-group-item list-group-item-primary\">Upvotes: {value.upvotes}</li>\n                          <li className=\"list-group-item list-group-item-secondary\">Downvotes: {value.downvotes}</li>\n                          <li className=\"list-group-item list-group-item-success\">Post-Date: {value.post_date}</li>\n                        </ul> \n                  </p>\n                        )\n                    }\n                  </div>\n                  :\n                  <div>\n                    <button onClick={this.roastsOnlyButton}>\n                      for ROASTS :^(\n                    </button>\n                    <h3>:^(</h3>\n                  </div>\n                }\n            </section>\n        \n            <Popular\n              popularItemsButton={this.getPopularItems}\n              switchP={this.state.switchP}\n              popularData={this.state.popularData}\n              handleUpvote={this.handleUpvote}\n              handleDownvote={this.handleDownvote}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nclass Popular extends Component {\n  render() {\n    return (\n      <section className=\"popular col-sm text-center\">\n        {this.props.switchP ?\n          <div>\n            <button onClick={this.props.popularItemsButton}>for Popular items !!</button>\n            <h3>Populate!</h3>\n          </div>\n          : \n          <div className=\"shadow\">\n            {/* <button onClick={this.props.popularItemsButton}>clear Popular items</button> */}\n            <h3>Popular feed</h3>\n            {\n              this.props.popularData.map(value =>\n                <p className=\"card\">\n                <div className=\"card-header bg-dark text-white\"><strong>title: </strong>{value.title}</div>\n                <ul key={value.id} className=\"list-group shadow\">\n                  <li className=\"list-group-item list-group-item-secondary\">id: {value.id}</li>\n                  <li className=\"list-group-item list-group-item-primary\">{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n                  <li className=\"list-group-item list-group-item-secondary\">Content: {value.content}</li>\n                  {/* <li className=\"list-group-item list-group-item-danger\">\n                    <button onClick={this.props.handleUpvote(value.id)} className=\"btn btn-primary shadow\">Upvote</button>\n                    <button onClick={this.props.handleDownvote(value.id)} className=\"btn btn-danger shadow\">Downvote</button>\n                  </li> */}\n                  <li className=\"list-group-item list-group-item-primary\">Upvotes: {value.upvotes}</li>\n                  <li className=\"list-group-item list-group-item-secondary\">Downvotes: {value.downvotes}</li>\n                  <li className=\"list-group-item list-group-item-success\">Post-Date: {value.post_date}</li>\n                </ul> \n          </p>\n              )\n            }\n          </div>\n        }\n      </section>\n    )\n  }\n}\n\nexport default Home;\n\n\n\n\n\n// this.state.datas.map( data_obj => \n\n//   Object.keys(data_obj).map( function(key){\n\n//     let value = data_obj[key]\n\n//     return (\n//         <ul key={value.id}>title: {value.title}\n//           <li>id: {value.id}</li>\n//           <li>{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n//           <li>Content: {value.content}</li>\n//           <li>Upvotes: {value.upvotes}</li>\n//           <li>Downvotes: {value.downvotes}</li>\n//           <li>Post-Date: {value.post_date}</li>\n//         </ul>\n//       )\n//     }\n//   )\n// )\n\n// this.state.datas.map(outer =>\n//     outer.filter(inner => inner.boolean === true ).map(value =>\n\n//           <ul key={value.id}>title: {value.title}\n//             <li>id: {value.id}</li>\n//             <li>{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n//             <li>Content: {value.content}</li>\n//             <li>Upvotes: {value.upvotes}</li>\n//             <li>Downvotes: {value.downvotes}</li>\n//             <li>Post-Date: {value.post_date}</li>\n//           </ul>\n//       )\n//   )\n\n// this.state.datas.map(outer =>\n//   outer.filter(inner => inner.boolean === false).map(value =>\n//     <ul key={value.id}>title: {value.title}\n//       <li>id: {value.id}</li>\n//       <li>{value.boolean ? 'Boast :^D' : 'Roast :^('}</li>\n//       <li>Content: {value.content}</li>\n//       <li>Upvotes: {value.upvotes}</li>\n//       <li>Downvotes: {value.downvotes}</li>\n//       <li>Post-Date: {value.post_date}</li>\n//     </ul>\n//     )\n//   )","import React, { Component } from \"react\";\nimport { Link} from \"react-router-dom\";\n\nconst API_HOST = 'http://localhost:8000/api/';\n\nclass Post extends Component {\n\n    state = {\n        title: '',\n        boolean: true,\n        content: '',\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleBooleanChange = () => {\n        this.setState({\n            boolean: !this.state.boolean\n        })\n    }\n\n    postPostButton = event => {\n        event.preventDefault();\n\n        let meth_head = {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.state)\n        }\n        fetch( API_HOST + 'boastroast/', meth_head)\n        .then(response => response.json())\n        .then(responseData => {\n            console.log(responseData)\n            this.props.history.push(\"/\")\n            }\n        )\n        .catch(error => { \n            console.log(\"Error: \", error)\n            }\n        )\n    }\n\n    render() {\n      return (\n        <React.Fragment>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                crossorigin=\"anonymous\"\n            />\n            <div className=\"card\">\n                <div className=\"card-header shadow\">\n\n                <h1 className=\"card-title\">Make a Post!</h1>\n                <Link to=\"/\">\n                    <button type=\"button\" className=\"btn btn-outline-info btn-sm\">\n                        Back to Home\n                    </button>\n                </Link>\n            </div>\n\n            <div className=\"card-body shadow\">\n\n                <form onSubmit={this.postPostButton}>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"id_title\" className=\"col-sm-2 col-form-label\">Title:</label>\n                        <div className=\"col-auto\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control shadow\"\n                                id=\"inputEmail3\"\n                                placeholder=\"30 chars or less\"\n                                name=\"title\"\n                                maxLength=\"30\"\n                                onChange={this.handleChange}\n                                required \n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Content:</label>\n                        <div className=\"col-auto\">\n                            <textarea\n                                className=\"form-control shadow\"\n                                id=\"inputPassword3 id_content\"\n                                placeholder=\"Content\"\n                                cols=\"40\" \n                                rows=\"10\" \n                                name=\"content\" \n                                onChange={this.handleChange}\n                                required \n                            >\n                            </textarea>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-2\">Boast or Roast:</div>\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input\n                                    className=\"form-check-input shadow\" \n                                    type=\"checkbox\" \n                                    id=\"gridCheck1 id_boolean\"\n                                    name=\"boolean\"\n                                    onChange={this.handleBooleanChange}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                                Check to Roast\n                                </label>\n                                <div>\n                                    <small>(Default: Boast)</small>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col-sm-10\">\n                        <button type=\"submit\" className=\"shadow btn btn-primary btn-lg\">Post It!</button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        </React.Fragment>\n      )\n    }\n}\n\nexport default Post;","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Post from \"./Post\";\n\nclass App extends Component {\n    render() {\n      return (\n        <BrowserRouter>\n            <Switch>\n                <Route\n                  exact path={'/'} render={\n                    props => (\n                      <Home \n                        // {...props} \n                      />)\n                  }\n                />\n                <Route path=\"/post\" render={\n                    props => (\n                      <Post\n                        {...props}\n                      />)\n                  }\n                />\n            </Switch>\n        </BrowserRouter>\n      )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}